local assert = require("luassert")
local say = require("say")

-- Custom assertion function for whitespace-insensitive string comparison
local function same_ignoring_whitespace(_, arguments)
  local actual = arguments[1]
  local expected = arguments[2]

  -- Scrub temporary paths generated by vim.fn.tempname()
  local function scrub_temp_paths(path)
    local temp_prefix = vim.fn.tempname():match("^(.*/)")
    if temp_prefix then
      return path:gsub(temp_prefix .. '[^",%s]*', "/tmp/neotest-cpp-results")
    end
    return path
  end

  local actual_scrubbed = scrub_temp_paths(actual)
  local expected_scrubbed = scrub_temp_paths(expected)

  local actual_clean = actual_scrubbed:gsub("%s", "")
  local expected_clean = expected_scrubbed:gsub("%s", "")

  if expected_clean == actual_clean then
    return true
  else
    -- Swap values for error message
    arguments[1] = expected_scrubbed
    arguments[2] = actual_scrubbed
    return false
  end
end

say:set(
  "assertion.same_ignoring_whitespace.positive",
  "Expected strings to be the same ignoring whitespace.\nExpected:\n%s\nActual:\n%s"
)
say:set(
  "assertion.same_ignoring_whitespace.negative",
  "Expected strings to be different ignoring whitespace.\nExpected:\n%s\nActual:\n%s"
)

assert:register(
  "assertion",
  "same_ignoring_whitespace",
  same_ignoring_whitespace,
  "assertion.same_ignoring_whitespace.positive",
  "assertion.same_ignoring_whitespace.negative"
)
